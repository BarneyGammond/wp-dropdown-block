{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/edit.js","webpack:///./src/editor.scss?21af","webpack:///./src/index.js","webpack:///./src/save.js","webpack:///external [\"wp\",\"blockEditor\"]","webpack:///external [\"wp\",\"blocks\"]","webpack:///external [\"wp\",\"element\"]","webpack:///external [\"wp\",\"i18n\"]"],"names":["Edit","attributes","setAttributes","className","blockProps","useBlockProps","headerContent","__","dropContent","registerBlockType","edit","save"],"mappings":";;;;;;;;;;;;;;;;;;;QAAA;QACA;QACA;QACA;QACA;;QAEA;QACA;QACA;QACA,QAAQ,oBAAoB;QAC5B;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA,iBAAiB,4BAA4B;QAC7C;QACA;QACA,kBAAkB,2BAA2B;QAC7C;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;;QAEA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;QAEA;QACA;QACA;QACA;QACA,gBAAgB,uBAAuB;QACvC;;;QAGA;QACA;QACA;QACA;;;;;;;;;;;;;;;;;;;;;;;;ACvJA;AACA;AACA;AACA;AACA;AACC;AAEA;AACD;AACA;AACA;AACA;AACA;;AACC;AAEA;AACD;AACA;AACA;AACA;AACA;;AACC;AAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;AACgB,SAASA,IAAT,CAAc;AAAEC,YAAF;AAAcC,eAAd;AAA6BC;AAA7B,CAAd,EAAwD;AAEvE,QAAMC,UAAU,GAAGC,6EAAa,EAAhC;AAEA,SACC,gFAAUD,UAAV,EACC,sFACC,yEAAC,gEAAD;AACC,WAAO,EAAC,IADT,CACc;AADd;AAEC,SAAK,EAAGH,UAAU,CAACK,aAFpB,CAEoC;AAFpC;AAGC,aAAS,EAAGH,SAHb;AAIC,kBAAc,EAAG,CAAE,WAAF,EAAe,aAAf,CAJlB,CAImD;AAJnD;AAKC,YAAQ,EAAKG,aAAF,IAAqBJ,aAAa,CAAE;AAAEI;AAAF,KAAF,CAL9C,CAKsE;AALtE;AAMC,eAAW,EAAGC,0DAAE,CAAE,iBAAF,CANjB,CAMyC;;AANzC,IADD,CADD,EAWC,sFACC,yEAAC,gEAAD;AACC,WAAO,EAAC,GADT,CACa;AADb;AAEC,SAAK,EAAGN,UAAU,CAACO,WAFpB,CAEkC;AAFlC;AAGC,aAAS,EAAC,eAHX;AAIC,kBAAc,EAAG,CAAE,WAAF,EAAe,aAAf,CAJlB,CAImD;AAJnD;AAKC,YAAQ,EAAKA,WAAF,IAAmBN,aAAa,CAAE;AAAEM;AAAF,KAAF,CAL5C,CAKkE;AALlE;AAMC,eAAW,EAAGD,0DAAE,CAAE,kBAAF,CANjB,CAM0C;;AAN1C,IADD,CAXD,CADD;AAwBC,C;;;;;;;;;;;;AC3DF;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACC;AAEA;AACD;AACA;AACA;AACA;AACA;AACA;;AACC;AAEA;AACD;AACA;;AACC;AACA;AAEA;AACD;AACA;AACA;AACA;;AACCE,2EAAiB,CAAE,gCAAF,EAAoC;AACpD;AACF;AACA;AACEC,MAAI,EAAEV,6CAJ8C;;AAMpD;AACF;AACA;AACEW,qDAAIA;AATgD,CAApC,CAAjB,C;;;;;;;;;;;;;;;;;;;;;;AC3BD;AACA;AACA;AACA;AACA;AACC;AAEA;AACD;AACA;AACA;AACA;AACA;;AACC;AAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACgB,SAASA,IAAT,CAAc;AAAEV;AAAF,CAAd,EAA8B;AAC5C,QAAMG,UAAU,GAAGC,qEAAa,CAACM,IAAd,EAAnB;AAEA,SACC,gFAAUP,UAAV,EACC,qFAAI,yEAAC,gEAAD,CAAU,OAAV;AAAkB,aAAS,EAAC,iBAA5B;AAA8C,WAAO,EAAC,MAAtD;AAA6D,SAAK,EAAGH,UAAU,CAACK;AAAhF,IAAJ,CADD,EAEC;AAAG,SAAK,EAAC;AAAT,KAAiC,yEAAC,gEAAD,CAAU,OAAV;AAAkB,aAAS,EAAC,eAA5B;AAA4C,WAAO,EAAC,MAApD;AAA2D,SAAK,EAAGL,UAAU,CAACO;AAA9E,IAAjC,CAFD,CADD;AAMA,C;;;;;;;;;;;ACjCF,aAAa,8CAA8C,EAAE,I;;;;;;;;;;;ACA7D,aAAa,yCAAyC,EAAE,I;;;;;;;;;;;ACAxD,aAAa,0CAA0C,EAAE,I;;;;;;;;;;;ACAzD,aAAa,uCAAuC,EAAE,I","file":"index.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"index\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp_bg_dropdown_block\"] = window[\"webpackJsonp_bg_dropdown_block\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([\"./src/index.js\",\"style-index\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/**\n * Retrieves the translation of text.\n *\n * @see https://developer.wordpress.org/block-editor/packages/packages-i18n/\n */\n import { __ } from '@wordpress/i18n';\n\n /**\n  * React hook that is used to mark the block wrapper element.\n  * It provides all the necessary props like the class name.\n  *\n  * @see https://developer.wordpress.org/block-editor/packages/packages-block-editor/#useBlockProps\n  */\n import { useBlockProps, RichText } from '@wordpress/block-editor';\n \n /**\n  * Lets webpack process CSS, SASS or SCSS files referenced in JavaScript files.\n  * Those files can contain any CSS code that gets applied to the editor.\n  *\n  * @see https://www.npmjs.com/package/@wordpress/scripts#using-css\n  */\n import './editor.scss';\n \n /**\n  * The edit function describes the structure of your block in the context of the\n  * editor. This represents what the editor will render when the block is used.\n  *\n  * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#edit\n  *\n  * @return {WPElement} Element to render.\n  */\n export default function Edit({ attributes, setAttributes, className }) {\n \n\tconst blockProps = useBlockProps()\n \n\treturn (\n\t\t<div { ...blockProps }>\n\t\t\t<div>\n\t\t\t\t<RichText\n\t\t\t\t\ttagName=\"h2\" // The tag here is the element output and editable in the admin\n\t\t\t\t\tvalue={ attributes.headerContent } // Any existing content, either from the database or an attribute default\n\t\t\t\t\tclassName={ className }\n\t\t\t\t\tallowedFormats={ [ 'core/bold', 'core/italic' ] } // Allow the content to be made bold or italic, but do not allow other formatting options\n\t\t\t\t\tonChange={ ( headerContent ) => setAttributes( { headerContent } ) } // Store updated content as a block attribute\n\t\t\t\t\tplaceholder={ __( 'Dropdown Header' ) } // Display this text before any content has been added by the user\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<RichText\n\t\t\t\t\ttagName=\"p\" // The tag here is the element output and editable in the admin\n\t\t\t\t\tvalue={ attributes.dropContent } // Any existing content, either from the database or an attribute default\n\t\t\t\t\tclassName=\"dropdown-body\"\n\t\t\t\t\tallowedFormats={ [ 'core/bold', 'core/italic' ] } // Allow the content to be made bold or italic, but do not allow other formatting options\n\t\t\t\t\tonChange={ ( dropContent ) => setAttributes( { dropContent } ) } // Store updated content as a block attribute\n\t\t\t\t\tplaceholder={ __( 'Dropdown Content' ) } // Display this text before any content has been added by the user\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n }","// extracted by mini-css-extract-plugin\nexport {};","/**\n * Registers a new block provided a unique name and an object defining its behavior.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-registration/\n */\n import { registerBlockType } from '@wordpress/blocks';\n\n /**\n  * Lets webpack process CSS, SASS or SCSS files referenced in JavaScript files.\n  * All files containing `style` keyword are bundled together. The code used\n  * gets applied both to the front of your site and to the editor.\n  *\n  * @see https://www.npmjs.com/package/@wordpress/scripts#using-css\n  */\n import './style.scss';\n \n /**\n  * Internal dependencies\n  */\n import Edit from './edit';\n import save from './save';\n \n /**\n  * Every block starts by registering a new block type definition.\n  *\n  * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-registration/\n  */\n registerBlockType( 'create-block/bg-dropdown-block', {\n\t /**\n\t  * @see ./edit.js\n\t  */\n\t edit: Edit,\n \n\t /**\n\t  * @see ./save.js\n\t  */\n\t save,\n } );","/**\n * Retrieves the translation of text.\n *\n * @see https://developer.wordpress.org/block-editor/packages/packages-i18n/\n */\n import { __ } from '@wordpress/i18n';\n\n /**\n  * React hook that is used to mark the block wrapper element.\n  * It provides all the necessary props like the class name.\n  *\n  * @see https://developer.wordpress.org/block-editor/packages/packages-block-editor/#useBlockProps\n  */\n import { useBlockProps, RichText } from '@wordpress/block-editor';\n \n /**\n  * The save function defines the way in which the different attributes should\n  * be combined into the final markup, which is then serialized by the block\n  * editor into `post_content`.\n  *\n  * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#save\n  *\n  * @return {WPElement} Element to render.\n  */\n export default function save({ attributes }) {\n\t const blockProps = useBlockProps.save();\n\t \n\t return (\n\t\t <div { ...blockProps }>\n\t\t\t <h2><RichText.Content className=\"dropdown-header\" tagName=\"span\" value={ attributes.headerContent } /></h2>\n\t\t\t <p class=\"dropdown-body-wrapper\"><RichText.Content className=\"dropdown-body\" tagName=\"span\" value={ attributes.dropContent } /></p>\n\t\t </div>\n\t );\n }","(function() { module.exports = window[\"wp\"][\"blockEditor\"]; }());","(function() { module.exports = window[\"wp\"][\"blocks\"]; }());","(function() { module.exports = window[\"wp\"][\"element\"]; }());","(function() { module.exports = window[\"wp\"][\"i18n\"]; }());"],"sourceRoot":""}